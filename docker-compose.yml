# Face Recognition System - Docker Compose v1.2.0
# Enhanced API integration and user experience improvements

version: '3.8'

services:
  face-recognition:
    # Use local built image or GitHub image
    image: face-recognition-local:v1.2.0  # Change to ghcr.io/ahmertsengol/face-auth-opencv:v1.2.0 for production
    container_name: face-recognition-app-v1.2.0
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - FACE_RECOGNITION_ENV=production
      - LOG_LEVEL=info
      - APP_VERSION=v1.2.0
    volumes:
      - face_data:/app/data
      - face_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Optional: Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: face-recognition-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.2'

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: face-recognition-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - face-recognition
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'

volumes:
  face_data:
    driver: local
  face_logs:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: face-recognition-network
    driver: bridge 